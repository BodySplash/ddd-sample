/*
 * This file is generated by jOOQ.
 */
package lib.eventsourcing.schema.tables.records;


import lib.eventsourcing.schema.tables.EventOutbox;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EventOutboxRecord extends UpdatableRecordImpl<EventOutboxRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>event_store_schema.event_outbox.subscription_group</code>.
     */
    public EventOutboxRecord setSubscriptionGroup(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>event_store_schema.event_outbox.subscription_group</code>.
     */
    public String getSubscriptionGroup() {
        return (String) get(0);
    }

    /**
     * Setter for <code>event_store_schema.event_outbox.last_id</code>.
     */
    public EventOutboxRecord setLastId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>event_store_schema.event_outbox.last_id</code>.
     */
    public Long getLastId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>event_store_schema.event_outbox.last_transaction_id</code>.
     */
    public EventOutboxRecord setLastTransactionId(Object value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>event_store_schema.event_outbox.last_transaction_id</code>.
     */
    public Object getLastTransactionId() {
        return get(2);
    }

    /**
     * Setter for <code>event_store_schema.event_outbox.max_id</code>.
     */
    public EventOutboxRecord setMaxId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>event_store_schema.event_outbox.max_id</code>.
     */
    public Long getMaxId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventOutboxRecord
     */
    public EventOutboxRecord() {
        super(EventOutbox.EVENT_OUTBOX);
    }

    /**
     * Create a detached, initialised EventOutboxRecord
     */
    public EventOutboxRecord(String subscriptionGroup, Long lastId, Object lastTransactionId, Long maxId) {
        super(EventOutbox.EVENT_OUTBOX);

        setSubscriptionGroup(subscriptionGroup);
        setLastId(lastId);
        setLastTransactionId(lastTransactionId);
        setMaxId(maxId);
        resetChangedOnNotNull();
    }
}
