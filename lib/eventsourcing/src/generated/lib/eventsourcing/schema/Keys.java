/*
 * This file is generated by jOOQ.
 */
package lib.eventsourcing.schema;


import lib.eventsourcing.schema.tables.AggregateMetadata;
import lib.eventsourcing.schema.tables.EventOutbox;
import lib.eventsourcing.schema.tables.EventStore;
import lib.eventsourcing.schema.tables.records.AggregateMetadataRecord;
import lib.eventsourcing.schema.tables.records.EventOutboxRecord;
import lib.eventsourcing.schema.tables.records.EventStoreRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * event_store_schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AggregateMetadataRecord> AGGREGATE_METADATA_PK = Internal.createUniqueKey(AggregateMetadata.AGGREGATE_METADATA, DSL.name("aggregate_metadata_pk"), new TableField[] { AggregateMetadata.AGGREGATE_METADATA.ID, AggregateMetadata.AGGREGATE_METADATA.TYPE }, true);
    public static final UniqueKey<EventOutboxRecord> EVENT_OUTBOX_PKEY = Internal.createUniqueKey(EventOutbox.EVENT_OUTBOX, DSL.name("event_outbox_pkey"), new TableField[] { EventOutbox.EVENT_OUTBOX.SUBSCRIPTION_GROUP }, true);
    public static final UniqueKey<EventStoreRecord> EVENT_STORE_PKEY = Internal.createUniqueKey(EventStore.EVENT_STORE, DSL.name("event_store_pkey"), new TableField[] { EventStore.EVENT_STORE.ID }, true);
}
